// Put div pink to visualize grid. 
// TODO : delete that later.
.classOld,
.classCurrent,
.classFuture,
.aside,
.nav{
    background-color: pink;
}


// Define grid for class, depend on media queries from breakpoints.scss
.bodyClass{
    margin : 4em;
    display: grid;
    gap: 2em;
    justify-content: center;
}


@include for_breakpoint(mobile) {
    .bodyClass{
        display: grid;
        grid-template-columns: 1fr;
        // On phone : 20vh for nav, 50 for old class, 200 for current class, 
        // 50 for futur class, 100vh for aside, 50vh for footer.
        grid-template-rows: 20vh 50vh 200vh 50vh 100vh 50vh ;
    }
    .classOld{
        grid-area: 2/1/3/-1;
    }
    .classCurrent{
        grid-area: 3/1/4/-1;
    }
    .classFuture{
        grid-area: 4/1/5/-1;
    }
    .aside{
        grid-area: 5/1/6/-1;
    }
    .nav{
        grid-area: 1/1/2/-1;
    }
}
        


@include for_breakpoint(tablet) {
    .bodyClass{
        display: grid;
        // On tablette : 2fr for all except 1fr for aside. Nav on both.
        grid-template-columns: 2fr 1fr;
        // On tablette : 20vh for nav, 50 for old class, 200 for current class, 
        // 50 for futur class, 50vh for footer.
        grid-template-rows: 20vh 50vh 200vh 50vh 50vh ;
    }
    .classOld{
        grid-area: 2/1/3/-2;
    }
    .classCurrent{
        grid-area: 3/1/4/-2;
    }
    .classFuture{
        grid-area: 4/1/5/-2;
    }
    .aside{
        grid-area: 2/-1/5/-2;
    }
    .nav{
        grid-area: 1/1/2/-1;
    }
    
}

@include for_breakpoint(desktop) {
    .bodyClass{
        display: grid;
        // On computer : 4fr for all except 1fr for aside. Nav on both.
        grid-template-columns: repeat(5, 1fr);
        // On computer (same): 20vh for nav, 50 for old class, 200 for current class, 
        // 50 for futur class, 50vh for footer.
        grid-template-rows: 20vh 50vh 200vh 50vh 50vh ;
    }
    .classOld{
        grid-area: 2/1/3/-2;
    }
    .classCurrent{
        grid-area: 3/1/4/-2;
    }
    .classFuture{
        grid-area: 4/1/5/-2;
    }
    .aside{
        grid-area: 2/-1/5/-2;
    }
    .nav{
        grid-area: 1/1/2/-1;
    }
}



// @include for_breakpoint(portrait) {
// }
// @include for_breakpoint(landscape) {
// }


// .aside{
//     @include for_breakpoint(portrait) {
//         // background-color: rgb(255, 0, 238);
//     }
//     @include for_breakpoint(landscape) {
//         // background-color: rgb(255, 242, 0);
//     }
//     @include for_breakpoint(desktop) {
//         // background-color: rgb(0, 255, 85);
//     }
//     @include for_breakpoint(mobile) {
//         // background-color: red;
//     }
//     @include for_breakpoint(tablet) {
//         // background-color: rgb(68, 0, 255);
//     }
// }


//  Class box
// .classCurrent{

// }
.categoryClassCurrent{
    display : flex;
    // flex-direction: column;
    justify-content: center;
    // gap: 2vw;
    flex-wrap: wrap ;


}

.containerClass{
    width: 10vh;
    height: 10vh;
    border-radius: 50px;
    border : 1vh;
    border-color: black;
    // display : flex;
    // justify-content: center;
    // gap: 2vw;
    // flex-wrap: wrap ;
}


.pictureClass {
    width: 10px;
}

.containerClass{
    // display: flex;    
    // flex-direction: column;
    // align-items: center;
    // justify-content: center;
    width: 10vw;
    height: 10vw;
    margin : 1em;
    margin-top: 2em;

}

.pictureClass{
    position : relative ;
    clip-path:ellipse(50% 50%);
    height: 100%;
    width: 100%;
    object-position : center;
    // margin : auto;
    // margin-top: auto;
    // margin-bottom: auto;

}

.cercle { 
    display: flex;
    flex-direction: column;
    align-items: center;
    // height: 10vw; 
    // width: 10vw;
    background-color: rgba(255, 255, 255, 0);
    border: 1vw solid rgb(255, 114, 114);
    border-radius: 100%; 
    padding : 0.5vw;
} 

.linkClass {
    width: 7vw;
    height: 7vw;
}

.textClass {
    margin-top: 4px;
}